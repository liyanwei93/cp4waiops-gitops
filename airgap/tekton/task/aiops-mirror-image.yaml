---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mirror-image
spec:
  description: >-
    Task to Mirror Image.
  workspaces:
    - name: install-env
      description: A workspace containing environment variables used by install code.
  steps:
    - name: install-aimanager
      image: redhat/ubi8
      env:
      - name: WORKSPACE_INSTALL_ENV_BOUND
        value: $(workspaces.install-env.bound)
      - name: WORKSPACE_INSTALL_ENV_PATH
        value: $(workspaces.install-env.path)
      script: |
        #!/usr/bin/env sh
        set -x

        if [ "${WORKSPACE_INSTALL_ENV_BOUND}" != "true" ] ; then
          echo "Workspace install-env not bound!"
          exit 1
        fi

        if [ -f ${WORKSPACE_INSTALL_ENV_PATH}/.env ] ; then
          export $(cat ${WORKSPACE_INSTALL_ENV_PATH}/.env | xargs)
        fi

        echo y | yum -y install podman
        echo y | yum install httpd-tools
        echo y | yum -y install skopeo
        echo y | yum -y install openssl

        echo y | yum install wget
        wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.8.3/openshift-client-linux-4.8.3.tar.gz
        tar -xf openshift-client-linux-4.8.3.tar.gz
        mv oc /usr/bin/oc

        wget https://github.com/IBM/cloud-pak-cli/releases/latest/download/cloudctl-linux-amd64.tar.gz
        export CLOUDCTL_LAUNCH_SKIP_PREREQ_CHECK=true
        tar -xf cloudctl-linux-amd64.tar.gz
        chmod 755 cloudctl-linux-amd64
        mv cloudctl-linux-amd64 /usr/local/bin/cloudctl
        mkdir $HOME/offline

        export CASE_ARCHIVE=$CASE_NAME-$CASE_VERSION.tgz
        export CASE_INVENTORY_SETUP=cpwaiopsSetup
        export OFFLINEDIR=$HOME/offline
        export CASE_REPO_PATH=https://github.com/IBM/cloud-pak/raw/master/repo/case
        export CASE_LOCAL_PATH=$OFFLINEDIR/$CASE_ARCHIVE
        export CP_REGISTRY_PASSWORD=${CP_TOKEN}
        export LOCAL_DOCKER_REGISTRY=${REGISTRY}
        export LOCAL_DOCKER_REGISTRY_USER=${USERNAME}
        export LOCAL_DOCKER_REGISTRY_PASSWORD=${PASSWORD}

        cloudctl case save \
        --repo https://github.com/IBM/cloud-pak/raw/master/repo/case \
        --case $CASE_NAME \
        --version $CASE_VERSION \
        --outputdir $HOME/offline

        cloudctl case launch \
          --case $OFFLINEDIR/$CASE_ARCHIVE \
          --inventory $CASE_INVENTORY_SETUP \
          --action configure-creds-airgap \
          --args "--registry $LOCAL_DOCKER_REGISTRY --user $LOCAL_DOCKER_REGISTRY_USER --pass $LOCAL_DOCKER_REGISTRY_PASSWORD"

        cloudctl case launch \
          --case $OFFLINEDIR/$CASE_ARCHIVE \
          --inventory $CASE_INVENTORY_SETUP \
          --action configure-creds-airgap \
          --args "--registry cp.icr.io --user cp --pass $CP_REGISTRY_PASSWORD"

        cloudctl case launch \
          --case $CASE_LOCAL_PATH \
          --inventory $CASE_INVENTORY_SETUP \
          --action mirror-images \
          --args "--registry $LOCAL_DOCKER_REGISTRY --inputDir $OFFLINEDIR"
