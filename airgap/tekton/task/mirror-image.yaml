---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mirror-image
spec:
  description: >-
    Task to Mirror Image.
  workspaces:
    - name: install-env
      description: A workspace containing environment variables used by install code.
  steps:
    - name: install-aimanager
      image: alpine
      env:
      - name: WORKSPACE_INSTALL_ENV_BOUND
        value: $(workspaces.install-env.bound)
      - name: WORKSPACE_INSTALL_ENV_PATH
        value: $(workspaces.install-env.path)
      script: |
        #!/usr/bin/env sh
        set -eu

        if [ "${WORKSPACE_INSTALL_ENV_BOUND}" != "true" ] ; then
          echo "Workspace install-env not bound!"
          exit 1
        fi

        apk add --no-cache curl bash wget docker podman openssl

        wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
        tar -xf openshift-client-linux.tar.gz
        mv oc /usr/bin/oc

        curl https://codeload.github.com/liyanwei93/cp4waiops-gitops/tar.gz/airgap | tar -xz --strip=2 cp4waiops-gitops-airgap/airgap/oc-ibm_pak-linux-amd64.tar.gz
        tar -xvf oc-ibm_pak-linux-amd64.tar.gz
        cp oc-ibm_pak-linux-amd64 /usr/local/bin/oc-ibm_pak       

        if [ -f ${WORKSPACE_INSTALL_ENV_PATH}/.env ] ; then
          export $(cat ${WORKSPACE_INSTALL_ENV_PATH}/.env | xargs)
        fi

        docker login cp.icr.io -u cp -p ${CP_TOKEN}
        docker login ${REGISTRY} -u ${USERNAME} -p {PASSWORD}

        oc ibm-pak get ibm-cp-waiops

        oc ibm-pak generate mirror-manifests ibm-cp-waiops ${REGISTRY}
        oc image mirror -f ~/.ibm-pak/data/mirror/ibm-cp-waiops/1.3.0/images-mapping.txt --filter-by-os=.* --insecure --skip-multiple-scopes --max-per-registry=1
