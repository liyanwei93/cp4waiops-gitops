---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pre-airgap-install
spec:
  description: >-
    Task to Airgap Install Prepare.
  workspaces:
    - name: install-env
      description: A workspace containing environment variables used by install code.
  steps:
    - name: pre-airgap-install
      image: LOCALREGISTRY/openshift/origin-cli:latest
      env:
      - name: WORKSPACE_INSTALL_ENV_BOUND
        value: $(workspaces.install-env.bound)
      - name: WORKSPACE_INSTALL_ENV_PATH
        value: $(workspaces.install-env.path)
      script: |
        #!/usr/bin/env sh
        set -eu

        if [ "${WORKSPACE_INSTALL_ENV_BOUND}" != "true" ] ; then
          echo "Workspace install-env not bound!"
          exit 1
        fi

        if [[ ${WORKSPACE_KUBECONFIG_BOUND} == "true" ]] ; then
          export KUBECONFIG=${WORKSPACE_KUBECONFIG_PATH}/${PARAM_KUBECONFIG_FILE}
        fi

        if [ -f ${WORKSPACE_INSTALL_ENV_PATH}/.env ] ; then
          export $(cat ${WORKSPACE_INSTALL_ENV_PATH}/.env | xargs)
        fi

        echo "-------------Create ImageContentSourcePolicy-------------"

        cat << EOF | oc apply -f -
        apiVersion: operator.openshift.io/v1alpha1
        kind: ImageContentSourcePolicy
        metadata:
          name: ibm-cp-waiops
        spec:
          repositoryDigestMirrors:
          - mirrors:
            - ${REGISTRY}/cp
            source: cp.icr.io/cp
          - mirrors:
            - ${REGISTRY}/ibmcom
            source: docker.io/ibmcom
          - mirrors:
            - ${REGISTRY}/cpopen
            source: icr.io/cpopen
          - mirrors:
            - ${REGISTRY}/opencloudio
            source: quay.io/opencloudio
          - mirrors:
            - ${REGISTRY}/openshift
            source: quay.io/openshift
        EOF

        echo "-------------Patch insecureRegistries-------------"

        oc patch image.config.openshift.io/cluster --type=merge \
        -p '{"spec":{"registrySources":{"insecureRegistries":["'${REGISTRY}'"]}}}' \
        || {
        echo "image.config.openshift.io/cluster patch failed."
        exit
        }    

        echo "-------------Configuring cluster pullsecret-------------"

        rm -rf ${HOME}/.dockerconfigjson
        oc extract secret/pull-secret -n openshift-config --to ${HOME} --confirm

        DOCKER_AUTH=${USERNAME}:${PASSWORD}
        oc registry login --registry ${REGISTRY} \
        --auth-basic=$DOCKER_AUTH \
        --to=${HOME}/.dockerconfigjson

        oc set data secret/pull-secret --from-file .dockerconfigjson=${HOME}/.dockerconfigjson -n openshift-config

        echo "done"
