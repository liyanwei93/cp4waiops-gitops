---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: aiops-mirror-image-filesystem
spec:
  description: >-
    Task to Mirror Image.
  workspaces:
    - name: install-env
      description: A workspace containing environment variables used by install code.
    - name: install-aiops
      description: The folder where we write the message to
  steps:
    - name: aiops-mirror-image-filesystem
      image: redhat/ubi8
      env:
      - name: WORKSPACE_INSTALL_ENV_BOUND
        value: $(workspaces.install-env.bound)
      - name: WORKSPACE_INSTALL_ENV_PATH
        value: $(workspaces.install-env.path)
      script: |
        #!/usr/bin/env sh
        set -x

        if [ "${WORKSPACE_INSTALL_ENV_BOUND}" != "true" ] ; then
          echo "Workspace install-env not bound!"
          exit 1
        fi

        if [ -f ${WORKSPACE_INSTALL_ENV_PATH}/.env ] ; then
          export $(cat ${WORKSPACE_INSTALL_ENV_PATH}/.env | xargs)
        fi

        echo y | yum install wget
        wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
        tar -xf openshift-client-linux.tar.gz
        mv oc /usr/bin/oc

        curl -L https://github.com/IBM/ibm-pak-plugin/releases/download/v1.2.0/oc-ibm_pak-linux-amd64.tar.gz -o oc-ibm_pak-linux-amd64.tar.gz
        tar -xvf oc-ibm_pak-linux-amd64.tar.gz
        cp oc-ibm_pak-linux-amd64 /usr/local/bin/oc-ibm_pak

        export CASE_NAME=$CASE_NAME
        export CASE_VERSION=$CASE_VERSION
        oc ibm-pak get $CASE_NAME --version $CASE_VERSION

        cd $(workspaces.install-aiops.path)
        
        if [[ -z ${REGISTRY} ]]; then
          export TARGET_REGISTRY=TARGET_REGISTRY
        else
          export TARGET_REGISTRY=${REGISTRY}
        fi

        oc ibm-pak generate mirror-manifests $CASE_NAME file://cpfs --version $CASE_VERSION --final-registry $TARGET_REGISTRY

        cp_auth=$(echo -n "cp:${CP_TOKEN}" | base64 | tr -d "\n")
        local_auth=$(echo -n "${REGISTRY_USERNAME}:${REGISTRY_PASSWORD}" | base64 | tr -d "\n")

        cat << EOF > auth.json
        {
          "auths": {
            "cp.icr.io": {
              "auth": "${cp_auth}"
            },
            "${REGISTRY}": {
              "auth": "${local_auth}"
            }
          }
        }
        EOF

        oc image mirror -f ~/.ibm-pak/data/mirror/$CASE_NAME/$CASE_VERSION/images-mapping-to-filesystem.txt \
        --filter-by-os=.* \
        --insecure \
        --skip-multiple-scopes \
        --max-per-registry=1 \
        -a auth.json

        tar -czvf v2.tgz v2
        rm -rf v2
        cp ~/.ibm-pak/data/mirror/$CASE_NAME/$CASE_VERSION/images-mapping-from-filesystem.txt .
